{
  "source": {
    "hash": "0x638bbb29ac3cf1b9d40a7b19e0322ad8be3eb6c5923aaf29b985f59c82f5fdae",
    "language": "ink! 3.0.0-rc5",
    "compiler": "rustc 1.61.0-nightly"
  },
  "contract": {
    "name": "MBController",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "V1": {
    "spec": {
      "constructors": [
        {
          "args": [
            {
              "name": "_operatorStore",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            },
            {
              "name": "_projects",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            },
            {
              "name": "_directory",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            },
            {
              "name": "_fundingCycleStore",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            },
            {
              "name": "_tokenStore",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            },
            {
              "name": "_splitsStore",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "name": [
            "new"
          ],
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [],
      "messages": [
        {
          "args": [
            {
              "name": "_owner",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            },
            {
              "name": "_projectMetadata",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 13
              }
            },
            {
              "name": "_data",
              "type": {
                "displayName": [
                  "MBFundingCycleData"
                ],
                "type": 14
              }
            },
            {
              "name": "_metadata",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 6
              }
            },
            {
              "name": "_mustStartAtOrAfter",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 6
              }
            },
            {
              "name": "_groupedSplits",
              "type": {
                "displayName": [
                  "Vec"
                ],
                "type": 15
              }
            },
            {
              "name": "_fundAccessConstraints",
              "type": {
                "displayName": [
                  "Vec"
                ],
                "type": 22
              }
            },
            {
              "name": "_terminals",
              "type": {
                "displayName": [
                  "Vec"
                ],
                "type": 24
              }
            },
            {
              "name": "_memo",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 13
              }
            }
          ],
          "docs": [
            "\n           @notice\n           Creates a project. This will mint an ERC-721 into the specified owner's account, configure a first funding cycle, and set up any splits.\n\n           @param _owner The address to set as the owner of the project. The project ERC-721 will be owned by this address.\n           @param _projectMetadata Metadata to associate with the project within a particular domain. This can be updated any time by the owner of the project.\n           @param _data Data that defines the project's first funding cycle. These properties will remain fixed for the duration of the funding cycle.\n           @param _metadata Metadata specifying the controller specific params that a funding cycle can have. These properties will remain fixed for the duration of the funding cycle.\n           @param _mustStartAtOrAfter The time before which the configured funding cycle cannot start.\n           @param _groupedSplits An array of splits to set for any number of groups.\n           @param _fundAccessConstraints An array containing amounts that a project can use from its treasury for each payment terminal. Amounts are fixed point numbers using the same number of decimals as the accompanying terminal.\n           @param _terminals Payment terminals to add for the project.\n           @param _memo A memo to pass along to the emitted event.\n\n           @return projectId The ID of the project.\n         "
          ],
          "mutates": true,
          "name": [
            "launchProjectFor"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "u64"
            ],
            "type": 6
          },
          "selector": "0x1dddc991"
        },
        {
          "args": [
            {
              "name": "owner",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            "\n        @notice\n        Get user's projects\n        @param _owner The address to set as the owner of the project. The project ERC-721 will be owned by this address.\n      "
          ],
          "mutates": false,
          "name": [
            "getOwnerProjects"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "Vec"
            ],
            "type": 12
          },
          "selector": "0xce87c176"
        },
        {
          "args": [
            {
              "name": "_projectId",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 6
              }
            },
            {
              "name": "_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 13
              }
            },
            {
              "name": "_symbol",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 13
              }
            }
          ],
          "docs": [
            "\n          @notice\n          Issues an owner's ERC20 JBTokens that'll be used when claiming tokens.\n\n          @param _projectId The ID of the project being issued tokens.\n          @param _name The ERC20's name.\n          @param _symbol The ERC20's symbol.\n        "
          ],
          "mutates": true,
          "name": [
            "issueTokenFor"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "AccountId"
            ],
            "type": 0
          },
          "selector": "0x1cebaa3b"
        },
        {
          "args": [
            {
              "name": "_projectId",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 6
              }
            },
            {
              "name": "_tokenCount",
              "type": {
                "displayName": [
                  "u128"
                ],
                "type": 9
              }
            },
            {
              "name": "_beneficiary",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            },
            {
              "name": "_memo",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 13
              }
            },
            {
              "name": "_preferClaimedTokens",
              "type": {
                "displayName": [
                  "bool"
                ],
                "type": 19
              }
            }
          ],
          "docs": [
            "\n       @notice\n       Mint new token supply into an account, and optionally reserve a supply to be distributed according to the project's current funding cycle configuration.\n       @param _projectId The ID of the project to which the tokens being minted belong.\n       @param _tokenCount The amount of tokens to mint in total, counting however many should be reserved.\n       @param _beneficiary The account that the tokens are being minted for.\n       @param _memo A memo to pass along to the emitted event.\n       @param _preferClaimedTokens A flag indicating whether a project's attached token contract should be minted if they have been issued.\n\n       @return beneficiaryTokenCount The amount of tokens minted for the beneficiary.\n     "
          ],
          "mutates": true,
          "name": [
            "mintTokensOf"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "u128"
            ],
            "type": 9
          },
          "selector": "0xd7a1046a"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "cell": {
                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "operatorStore"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "projects"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "directory"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "fundingCycleStore"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "tokenStore"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0500000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "splitsStore"
          },
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "struct": {
                        "fields": [
                          {
                            "layout": {
                              "cell": {
                                "key": "0x0600000000000000000000000000000000000000000000000000000000000000",
                                "ty": 3
                              }
                            },
                            "name": "header"
                          },
                          {
                            "layout": {
                              "struct": {
                                "fields": [
                                  {
                                    "layout": {
                                      "cell": {
                                        "key": "0x0700000000000000000000000000000000000000000000000000000000000000",
                                        "ty": 4
                                      }
                                    },
                                    "name": "len"
                                  },
                                  {
                                    "layout": {
                                      "array": {
                                        "cellsPerElem": 1,
                                        "layout": {
                                          "cell": {
                                            "key": "0x0700000001000000000000000000000000000000000000000000000000000000",
                                            "ty": 5
                                          }
                                        },
                                        "len": 4294967295,
                                        "offset": "0x0800000000000000000000000000000000000000000000000000000000000000"
                                      }
                                    },
                                    "name": "elems"
                                  }
                                ]
                              }
                            },
                            "name": "entries"
                          }
                        ]
                      }
                    },
                    "name": "keys"
                  },
                  {
                    "layout": {
                      "hash": {
                        "layout": {
                          "cell": {
                            "key": "0x0800000001000000000000000000000000000000000000000000000000000000",
                            "ty": 8
                          }
                        },
                        "offset": "0x0700000001000000000000000000000000000000000000000000000000000000",
                        "strategy": {
                          "hasher": "Blake2x256",
                          "postfix": "",
                          "prefix": "0x696e6b20686173686d6170"
                        }
                      }
                    },
                    "name": "values"
                  }
                ]
              }
            },
            "name": "_processedTokenTrackerOf"
          },
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "struct": {
                        "fields": [
                          {
                            "layout": {
                              "cell": {
                                "key": "0x0800000001000000000000000000000000000000000000000000000000000000",
                                "ty": 3
                              }
                            },
                            "name": "header"
                          },
                          {
                            "layout": {
                              "struct": {
                                "fields": [
                                  {
                                    "layout": {
                                      "cell": {
                                        "key": "0x0900000001000000000000000000000000000000000000000000000000000000",
                                        "ty": 4
                                      }
                                    },
                                    "name": "len"
                                  },
                                  {
                                    "layout": {
                                      "array": {
                                        "cellsPerElem": 1,
                                        "layout": {
                                          "cell": {
                                            "key": "0x0900000002000000000000000000000000000000000000000000000000000000",
                                            "ty": 10
                                          }
                                        },
                                        "len": 4294967295,
                                        "offset": "0x0a00000001000000000000000000000000000000000000000000000000000000"
                                      }
                                    },
                                    "name": "elems"
                                  }
                                ]
                              }
                            },
                            "name": "entries"
                          }
                        ]
                      }
                    },
                    "name": "keys"
                  },
                  {
                    "layout": {
                      "hash": {
                        "layout": {
                          "cell": {
                            "key": "0x0a00000002000000000000000000000000000000000000000000000000000000",
                            "ty": 11
                          }
                        },
                        "offset": "0x0900000002000000000000000000000000000000000000000000000000000000",
                        "strategy": {
                          "hasher": "Blake2x256",
                          "postfix": "",
                          "prefix": "0x696e6b20686173686d6170"
                        }
                      }
                    },
                    "name": "values"
                  }
                ]
              }
            },
            "name": "ownerProjects"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 1,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 2
            }
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "last_vacant",
                  "type": 4,
                  "typeName": "Index"
                },
                {
                  "name": "len",
                  "type": 4,
                  "typeName": "u32"
                },
                {
                  "name": "len_entries",
                  "type": 4,
                  "typeName": "u32"
                }
              ]
            }
          },
          "path": [
            "ink_storage",
            "collections",
            "stash",
            "Header"
          ]
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "primitive": "u32"
          }
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 7,
                      "typeName": "VacantEntry"
                    }
                  ],
                  "index": 0,
                  "name": "Vacant"
                },
                {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "T"
                    }
                  ],
                  "index": 1,
                  "name": "Occupied"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 6
            }
          ],
          "path": [
            "ink_storage",
            "collections",
            "stash",
            "Entry"
          ]
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "primitive": "u64"
          }
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "next",
                  "type": 4,
                  "typeName": "Index"
                },
                {
                  "name": "prev",
                  "type": 4,
                  "typeName": "Index"
                }
              ]
            }
          },
          "path": [
            "ink_storage",
            "collections",
            "stash",
            "VacantEntry"
          ]
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "value",
                  "type": 9,
                  "typeName": "V"
                },
                {
                  "name": "key_index",
                  "type": 4,
                  "typeName": "KeyIndex"
                }
              ]
            }
          },
          "params": [
            {
              "name": "V",
              "type": 9
            }
          ],
          "path": [
            "ink_storage",
            "collections",
            "hashmap",
            "ValueEntry"
          ]
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "primitive": "u128"
          }
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 7,
                      "typeName": "VacantEntry"
                    }
                  ],
                  "index": 0,
                  "name": "Vacant"
                },
                {
                  "fields": [
                    {
                      "type": 0,
                      "typeName": "T"
                    }
                  ],
                  "index": 1,
                  "name": "Occupied"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 0
            }
          ],
          "path": [
            "ink_storage",
            "collections",
            "stash",
            "Entry"
          ]
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "value",
                  "type": 12,
                  "typeName": "V"
                },
                {
                  "name": "key_index",
                  "type": 4,
                  "typeName": "KeyIndex"
                }
              ]
            }
          },
          "params": [
            {
              "name": "V",
              "type": 12
            }
          ],
          "path": [
            "ink_storage",
            "collections",
            "hashmap",
            "ValueEntry"
          ]
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "sequence": {
              "type": 6
            }
          }
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "primitive": "str"
          }
        }
      },
      {
        "id": 14,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "duration",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "weight",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "discountRate",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "ballot",
                  "type": 0,
                  "typeName": "AccountId"
                }
              ]
            }
          },
          "path": [
            "MBController",
            "mb_controller",
            "MBFundingCycleData"
          ]
        }
      },
      {
        "id": 15,
        "type": {
          "def": {
            "sequence": {
              "type": 16
            }
          }
        }
      },
      {
        "id": 16,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "group",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "splits",
                  "type": 17,
                  "typeName": "BTreeMap<u64, MBSplit>"
                }
              ]
            }
          },
          "path": [
            "MBController",
            "mb_controller",
            "MBGroupedSplits"
          ]
        }
      },
      {
        "id": 17,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 20
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 6
            },
            {
              "name": "V",
              "type": 18
            }
          ],
          "path": [
            "BTreeMap"
          ]
        }
      },
      {
        "id": 18,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "preferClaimed",
                  "type": 19,
                  "typeName": "bool"
                },
                {
                  "name": "preferAddToBalance",
                  "type": 19,
                  "typeName": "bool"
                },
                {
                  "name": "percent",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "projectId",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "AccountId"
                },
                {
                  "name": "lockedUntil",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "allocator",
                  "type": 0,
                  "typeName": "AccountId"
                }
              ]
            }
          },
          "path": [
            "MBController",
            "mb_controller",
            "MBSplit"
          ]
        }
      },
      {
        "id": 19,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      },
      {
        "id": 20,
        "type": {
          "def": {
            "sequence": {
              "type": 21
            }
          }
        }
      },
      {
        "id": 21,
        "type": {
          "def": {
            "tuple": [
              6,
              18
            ]
          }
        }
      },
      {
        "id": 22,
        "type": {
          "def": {
            "sequence": {
              "type": 23
            }
          }
        }
      },
      {
        "id": 23,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "terminal",
                  "type": 0,
                  "typeName": "AccountId"
                },
                {
                  "name": "token",
                  "type": 0,
                  "typeName": "AccountId"
                },
                {
                  "name": "distributionLimit",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "distributionLimitCurrency",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "overflowAllowance",
                  "type": 6,
                  "typeName": "u64"
                },
                {
                  "name": "overflowAllowanceCurrency",
                  "type": 6,
                  "typeName": "u64"
                }
              ]
            }
          },
          "path": [
            "MBController",
            "mb_controller",
            "MBFundAccessConstraints"
          ]
        }
      },
      {
        "id": 24,
        "type": {
          "def": {
            "sequence": {
              "type": 0
            }
          }
        }
      }
    ]
  }
}