{
  "source": {
    "hash": "0x3fb90a56a5a99792011e7a11620ef491830d17309882e0e8a8b09235386ae7df",
    "language": "ink! 3.0.0-rc5",
    "compiler": "rustc 1.61.0-nightly"
  },
  "contract": {
    "name": "MBFundingCycleStore",
    "version": "0.1.0",
    "authors": [
      "Parity Technologies <admin@parity.io>"
    ]
  },
  "V1": {
    "spec": {
      "constructors": [
        {
          "args": [],
          "docs": [],
          "name": [
            "new"
          ],
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [],
      "messages": [
        {
          "args": [
            {
              "name": "_projectId",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            },
            {
              "name": "_configuration",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            }
          ],
          "docs": [
            "\n            @notice\n            Get the funding cycle with the given configuration for the specified project.\n\n            @param _projectId The ID of the project to which the funding cycle belongs.\n            @param _configuration The configuration of the funding cycle to get.\n\n            @return fundingCycle The funding cycle.\n          "
          ],
          "mutates": false,
          "name": [
            "get"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "MBFundingCycle"
            ],
            "type": 8
          },
          "selector": "0x2f865bd9"
        },
        {
          "args": [
            {
              "name": "_projectId",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            }
          ],
          "docs": [
            "\n      @notice\n      The latest funding cycle to be configured for the specified project, and its current ballot state.\n\n      @param _projectId The ID of the project to get the latest configured funding cycle of.\n\n      @return fundingCycle The project's queued funding cycle.\n      @return ballotState The state of the ballot for the reconfiguration.\n    "
          ],
          "mutates": false,
          "name": [
            "latestConfiguredOf"
          ],
          "payable": false,
          "returnType": {
            "displayName": [],
            "type": 12
          },
          "selector": "0x6e674f0d"
        },
        {
          "args": [
            {
              "name": "_projectId",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            }
          ],
          "docs": [
            "\n          @notice\n          The funding cycle that's next up for the specified project.\n\n          @dev\n          If a queued funding cycle of the project is not found, returns an empty funding cycle with all properties set to 0.\n\n          @param _projectId The ID of the project to get the queued funding cycle of.\n\n          @return fundingCycle The project's queued funding cycle.\n        "
          ],
          "mutates": false,
          "name": [
            "queuedOf"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "MBFundingCycle"
            ],
            "type": 8
          },
          "selector": "0x5040bb97"
        },
        {
          "args": [
            {
              "name": "_projectId",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            }
          ],
          "docs": [
            "\n            @notice\n            The funding cycle that is currently active for the specified project.\n\n            @dev\n            If a current funding cycle of the project is not found, returns an empty funding cycle with all properties set to 0.\n\n            @param _projectId The ID of the project to get the current funding cycle of.\n\n            @return fundingCycle The project's current funding cycle.\n          "
          ],
          "mutates": false,
          "name": [
            "currentOf"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "MBFundingCycle"
            ],
            "type": 8
          },
          "selector": "0xf0fbd6a0"
        },
        {
          "args": [
            {
              "name": "_projectId",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            }
          ],
          "docs": [
            "\n           @notice\n           The current ballot state of the project.\n\n           @param _projectId The ID of the project to check the ballot state of.\n\n           @return The project's current ballot's state.\n         "
          ],
          "mutates": false,
          "name": [
            "currentBallotStateOf"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "MBBallotState"
            ],
            "type": 13
          },
          "selector": "0x5f812749"
        },
        {
          "args": [
            {
              "name": "_projectId",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            },
            {
              "name": "_weight",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            },
            {
              "name": "_metadata",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            },
            {
              "name": "_mustStartAtOrAfter",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 4
              }
            }
          ],
          "docs": [
            "\n           @notice\n           Configures the next eligible funding cycle for the specified project.\n           @param _projectId The ID of the project being configured.\n           @param _data The funding cycle configuration data.\n           @param _metadata Arbitrary extra data to associate with this funding cycle configuration that's not used within.\n           @param _mustStartAtOrAfter The time before which the initialized funding cycle cannot start.\n\n           @return The funding cycle that the configuration will take effect during.\n         "
          ],
          "mutates": true,
          "name": [
            "configureFor"
          ],
          "payable": false,
          "returnType": {
            "displayName": [
              "MBFundingCycle"
            ],
            "type": 8
          },
          "selector": "0xc8fc0fdd"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "struct": {
                        "fields": [
                          {
                            "layout": {
                              "cell": {
                                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                "ty": 0
                              }
                            },
                            "name": "header"
                          },
                          {
                            "layout": {
                              "struct": {
                                "fields": [
                                  {
                                    "layout": {
                                      "cell": {
                                        "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                                        "ty": 1
                                      }
                                    },
                                    "name": "len"
                                  },
                                  {
                                    "layout": {
                                      "array": {
                                        "cellsPerElem": 1,
                                        "layout": {
                                          "cell": {
                                            "key": "0x0100000001000000000000000000000000000000000000000000000000000000",
                                            "ty": 2
                                          }
                                        },
                                        "len": 4294967295,
                                        "offset": "0x0200000000000000000000000000000000000000000000000000000000000000"
                                      }
                                    },
                                    "name": "elems"
                                  }
                                ]
                              }
                            },
                            "name": "entries"
                          }
                        ]
                      }
                    },
                    "name": "keys"
                  },
                  {
                    "layout": {
                      "hash": {
                        "layout": {
                          "cell": {
                            "key": "0x0200000001000000000000000000000000000000000000000000000000000000",
                            "ty": 6
                          }
                        },
                        "offset": "0x0100000001000000000000000000000000000000000000000000000000000000",
                        "strategy": {
                          "hasher": "Blake2x256",
                          "postfix": "",
                          "prefix": "0x696e6b20686173686d6170"
                        }
                      }
                    },
                    "name": "values"
                  }
                ]
              }
            },
            "name": "_packedUserPropertiesOf"
          },
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "struct": {
                        "fields": [
                          {
                            "layout": {
                              "cell": {
                                "key": "0x0200000001000000000000000000000000000000000000000000000000000000",
                                "ty": 0
                              }
                            },
                            "name": "header"
                          },
                          {
                            "layout": {
                              "struct": {
                                "fields": [
                                  {
                                    "layout": {
                                      "cell": {
                                        "key": "0x0300000001000000000000000000000000000000000000000000000000000000",
                                        "ty": 1
                                      }
                                    },
                                    "name": "len"
                                  },
                                  {
                                    "layout": {
                                      "array": {
                                        "cellsPerElem": 1,
                                        "layout": {
                                          "cell": {
                                            "key": "0x0300000002000000000000000000000000000000000000000000000000000000",
                                            "ty": 2
                                          }
                                        },
                                        "len": 4294967295,
                                        "offset": "0x0400000001000000000000000000000000000000000000000000000000000000"
                                      }
                                    },
                                    "name": "elems"
                                  }
                                ]
                              }
                            },
                            "name": "entries"
                          }
                        ]
                      }
                    },
                    "name": "keys"
                  },
                  {
                    "layout": {
                      "hash": {
                        "layout": {
                          "cell": {
                            "key": "0x0400000002000000000000000000000000000000000000000000000000000000",
                            "ty": 6
                          }
                        },
                        "offset": "0x0300000002000000000000000000000000000000000000000000000000000000",
                        "strategy": {
                          "hasher": "Blake2x256",
                          "postfix": "",
                          "prefix": "0x696e6b20686173686d6170"
                        }
                      }
                    },
                    "name": "values"
                  }
                ]
              }
            },
            "name": "_metadataOf"
          },
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "struct": {
                        "fields": [
                          {
                            "layout": {
                              "cell": {
                                "key": "0x0400000002000000000000000000000000000000000000000000000000000000",
                                "ty": 0
                              }
                            },
                            "name": "header"
                          },
                          {
                            "layout": {
                              "struct": {
                                "fields": [
                                  {
                                    "layout": {
                                      "cell": {
                                        "key": "0x0500000002000000000000000000000000000000000000000000000000000000",
                                        "ty": 1
                                      }
                                    },
                                    "name": "len"
                                  },
                                  {
                                    "layout": {
                                      "array": {
                                        "cellsPerElem": 1,
                                        "layout": {
                                          "cell": {
                                            "key": "0x0500000003000000000000000000000000000000000000000000000000000000",
                                            "ty": 2
                                          }
                                        },
                                        "len": 4294967295,
                                        "offset": "0x0600000002000000000000000000000000000000000000000000000000000000"
                                      }
                                    },
                                    "name": "elems"
                                  }
                                ]
                              }
                            },
                            "name": "entries"
                          }
                        ]
                      }
                    },
                    "name": "keys"
                  },
                  {
                    "layout": {
                      "hash": {
                        "layout": {
                          "cell": {
                            "key": "0x0600000003000000000000000000000000000000000000000000000000000000",
                            "ty": 6
                          }
                        },
                        "offset": "0x0500000003000000000000000000000000000000000000000000000000000000",
                        "strategy": {
                          "hasher": "Blake2x256",
                          "postfix": "",
                          "prefix": "0x696e6b20686173686d6170"
                        }
                      }
                    },
                    "name": "values"
                  }
                ]
              }
            },
            "name": "_packedIntrinsicPropertiesOf"
          },
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "struct": {
                        "fields": [
                          {
                            "layout": {
                              "cell": {
                                "key": "0x0600000003000000000000000000000000000000000000000000000000000000",
                                "ty": 0
                              }
                            },
                            "name": "header"
                          },
                          {
                            "layout": {
                              "struct": {
                                "fields": [
                                  {
                                    "layout": {
                                      "cell": {
                                        "key": "0x0700000003000000000000000000000000000000000000000000000000000000",
                                        "ty": 1
                                      }
                                    },
                                    "name": "len"
                                  },
                                  {
                                    "layout": {
                                      "array": {
                                        "cellsPerElem": 1,
                                        "layout": {
                                          "cell": {
                                            "key": "0x0700000004000000000000000000000000000000000000000000000000000000",
                                            "ty": 7
                                          }
                                        },
                                        "len": 4294967295,
                                        "offset": "0x0800000003000000000000000000000000000000000000000000000000000000"
                                      }
                                    },
                                    "name": "elems"
                                  }
                                ]
                              }
                            },
                            "name": "entries"
                          }
                        ]
                      }
                    },
                    "name": "keys"
                  },
                  {
                    "layout": {
                      "hash": {
                        "layout": {
                          "cell": {
                            "key": "0x0800000004000000000000000000000000000000000000000000000000000000",
                            "ty": 6
                          }
                        },
                        "offset": "0x0700000004000000000000000000000000000000000000000000000000000000",
                        "strategy": {
                          "hasher": "Blake2x256",
                          "postfix": "",
                          "prefix": "0x696e6b20686173686d6170"
                        }
                      }
                    },
                    "name": "values"
                  }
                ]
              }
            },
            "name": "latestConfigurationOf"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "last_vacant",
                  "type": 1,
                  "typeName": "Index"
                },
                {
                  "name": "len",
                  "type": 1,
                  "typeName": "u32"
                },
                {
                  "name": "len_entries",
                  "type": 1,
                  "typeName": "u32"
                }
              ]
            }
          },
          "path": [
            "ink_storage",
            "collections",
            "stash",
            "Header"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "primitive": "u32"
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 5,
                      "typeName": "VacantEntry"
                    }
                  ],
                  "index": 0,
                  "name": "Vacant"
                },
                {
                  "fields": [
                    {
                      "type": 3,
                      "typeName": "T"
                    }
                  ],
                  "index": 1,
                  "name": "Occupied"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 3
            }
          ],
          "path": [
            "ink_storage",
            "collections",
            "stash",
            "Entry"
          ]
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "tuple": [
              4,
              4
            ]
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "primitive": "u64"
          }
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "next",
                  "type": 1,
                  "typeName": "Index"
                },
                {
                  "name": "prev",
                  "type": 1,
                  "typeName": "Index"
                }
              ]
            }
          },
          "path": [
            "ink_storage",
            "collections",
            "stash",
            "VacantEntry"
          ]
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "value",
                  "type": 4,
                  "typeName": "V"
                },
                {
                  "name": "key_index",
                  "type": 1,
                  "typeName": "KeyIndex"
                }
              ]
            }
          },
          "params": [
            {
              "name": "V",
              "type": 4
            }
          ],
          "path": [
            "ink_storage",
            "collections",
            "hashmap",
            "ValueEntry"
          ]
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 5,
                      "typeName": "VacantEntry"
                    }
                  ],
                  "index": 0,
                  "name": "Vacant"
                },
                {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "T"
                    }
                  ],
                  "index": 1,
                  "name": "Occupied"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 4
            }
          ],
          "path": [
            "ink_storage",
            "collections",
            "stash",
            "Entry"
          ]
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "number",
                  "type": 4,
                  "typeName": "u64"
                },
                {
                  "name": "configuration",
                  "type": 4,
                  "typeName": "u64"
                },
                {
                  "name": "basedOn",
                  "type": 4,
                  "typeName": "u64"
                },
                {
                  "name": "start",
                  "type": 4,
                  "typeName": "u64"
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "u64"
                },
                {
                  "name": "weight",
                  "type": 4,
                  "typeName": "u64"
                },
                {
                  "name": "discountRate",
                  "type": 4,
                  "typeName": "u64"
                },
                {
                  "name": "ballot",
                  "type": 9,
                  "typeName": "AccountId"
                },
                {
                  "name": "metadata",
                  "type": 4,
                  "typeName": "u64"
                }
              ]
            }
          },
          "path": [
            "MBFundingCycleStore",
            "mb_fundingCycleStore",
            "MBFundingCycle"
          ]
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 10,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 11
            }
          }
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "tuple": [
              8,
              13
            ]
          }
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "Active"
                },
                {
                  "index": 1,
                  "name": "Approved"
                },
                {
                  "index": 2,
                  "name": "Failed"
                }
              ]
            }
          },
          "path": [
            "MBFundingCycleStore",
            "mb_fundingCycleStore",
            "MBBallotState"
          ]
        }
      }
    ]
  }
}